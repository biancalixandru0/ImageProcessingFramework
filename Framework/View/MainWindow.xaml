<Window x:Class="Framework.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Framework.ViewModel"
        xmlns:convert="clr-namespace:Framework.Converters"
        mc:Ignorable="d"
        Title="Image Processing"
        Height="750"
        Width="1200"
        WindowStartupLocation="CenterScreen"
        Icon="../Images/Icon.png">

    <Window.DataContext>
        <local:MainVM/>
    </Window.DataContext>

    <Grid Background="{Binding Path=Theme.BackgroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="80"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.Resources>
            <convert:ArrayMultiValueConverter x:Key="arrayMultiValueConverter"/>
        </Grid.Resources>

        <Menu Background="{Binding Path=Theme.MenuBackgroundColor}"
              Grid.Row="0" 
              Grid.ColumnSpan="2">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>

            <MenuItem Header="File"
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">
                <MenuItem Header="Load grayscale image"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.LoadGrayImageCommand}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                            <Binding ElementName="canvasOriginalImage"/>
                            <Binding ElementName="canvasProcessedImage"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="Load color image" 
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.LoadColorImageCommand}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                            <Binding ElementName="canvasOriginalImage"/>
                            <Binding ElementName="canvasProcessedImage"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Save processed image"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.SaveProcessedImageCommand}"/>
                <MenuItem Header="Save both images"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.SaveImagesCommand}"/>
                <Separator/>
                <MenuItem Header="Exit"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.ExitCommand}"/>
            </MenuItem>

            <MenuItem Header="Edit"
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">
                <MenuItem Header="Remove drawn shapes from initial canvas"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.RemoveInitialDrawnShapesCommand}"
                          CommandParameter="{Binding ElementName=canvasOriginalImage}"/>
                <MenuItem Header="Remove drawn shapes from processed canvas"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.RemoveProcessedDrawnShapesCommand}"
                          CommandParameter="{Binding ElementName=canvasProcessedImage}"/>
                <MenuItem Header="Remove drawn shapes from both canvases"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.RemoveDrawnShapesCommand}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                            <Binding ElementName="canvasOriginalImage"/>
                            <Binding ElementName="canvasProcessedImage"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Clear initial canvas"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.ClearInitialCanvasCommand}"
                          CommandParameter="{Binding ElementName=canvasOriginalImage}"/>
                <MenuItem Header="Clear processed canvas"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.ClearProcessedCanvasCommand}"
                          CommandParameter="{Binding ElementName=canvasProcessedImage}"/>
                <MenuItem Header="Clear both canvases"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.ClearCommand}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                            <Binding ElementName="canvasOriginalImage"/>
                            <Binding ElementName="canvasProcessedImage"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Tools" 
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">
                <MenuItem x:Name="themeMenu"
                          Header="Themes"
                          Foreground="#1E1E1E">
                    <MenuItem Header="Lime Green"
                              Click="ThemeModeSelector"/>
                    <MenuItem Header="Forest Green"
                              Click="ThemeModeSelector"/>
                    <MenuItem Header="Pale Pink"
                              Click="ThemeModeSelector"/>
                    <MenuItem Header="Lavender Violet"
                              Click="ThemeModeSelector"/>
                    <MenuItem Header="Cobalt Blue"
                              Click="ThemeModeSelector"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Magnifier"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.MagnifierCommand}"/>
                <MenuItem Header="Gray/Color levels on row" 
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.DisplayLevelsOnRowCommand}"/>
                <MenuItem Header="Gray/Color levels on column" 
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.DisplayLevelsOnColumnCommand}"/>
                <MenuItem Header="Visualize image histogram"
                          Foreground="#1E1E1E">
                    <MenuItem Header="Initial image histogram"
                              Command="{Binding Path=MenuCommands.HistogramInitialImageCommand}"/>
                    <MenuItem Header="Processed image histogram"
                              Command="{Binding Path=MenuCommands.HistogramProcessedImageCommand}"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Copy" 
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.CopyImageCommand}"
                          CommandParameter="{Binding ElementName=canvasProcessedImage}"/>
                <MenuItem Header="Invert" 
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.InvertImageCommand}"
                          CommandParameter="{Binding ElementName=canvasProcessedImage}"/>
                <MenuItem Header="Transform to gray image"
                          Foreground="#1E1E1E"
                          Command="{Binding Path=MenuCommands.ConvertImageToGrayscaleCommand}"
                          CommandParameter="{Binding ElementName=canvasProcessedImage}"/>
                <Separator/>
                <MenuItem Header="Rotate image"
                          Foreground="#1E1E1E">
                    <MenuItem Header="Clockwise"
                              Command="{Binding Path=MenuCommands.RotateImageClockwiseCommand}"
                              CommandParameter="{Binding ElementName=canvasProcessedImage}"/>
                    <MenuItem Header="Anti-clockwise"
                              Command="{Binding Path=MenuCommands.RotateImageAntiClockwiseCommand}"
                              CommandParameter="{Binding ElementName=canvasProcessedImage}"/>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Pointwise operations"
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">

            </MenuItem>

            <MenuItem Header="Thresholding"
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">

            </MenuItem>

            <MenuItem Header="Filters" 
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">
                <MenuItem Header="Low-pass"
                          Foreground="#1E1E1E">

                </MenuItem>
                <MenuItem Header="High-pass"
                          Foreground="#1E1E1E">

                </MenuItem>
            </MenuItem>

            <MenuItem Header="Morphological operations"
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">

            </MenuItem>

            <MenuItem Header="Geometric transformations"
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">

            </MenuItem>

            <MenuItem Header="Segmentation"
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}">

            </MenuItem>

            <MenuItem Header="Save as original image" 
                      Background="{Binding Path=Theme.MenuItemBackgroundColor}"
                      Foreground="{Binding Path=Theme.MenuItemForegroundColor}"
                      HorizontalAlignment="Right" 
                      Command="{Binding Path=MenuCommands.SaveAsOriginalImageCommand}">
                <MenuItem.CommandParameter>
                    <MultiBinding Converter="{StaticResource arrayMultiValueConverter}">
                        <Binding ElementName="canvasOriginalImage"/>
                        <Binding ElementName="canvasProcessedImage"/>
                    </MultiBinding>
                </MenuItem.CommandParameter>
            </MenuItem>
        </Menu>

        <TextBlock Grid.Row="1"
                   Grid.Column="0"
                   Text="Original Image"
                   Foreground="{Binding Path=Theme.TextForeground}"
                   FontSize="15"
                   TextAlignment="Center"
                   Height="20"
                   Width="120"/>
        <TextBlock Grid.Row="1"
                   Grid.Column="1"
                   Text="Processed Image"
                   Foreground="{Binding Path=Theme.TextForeground}"
                   FontSize="15"
                   TextAlignment="Center"
                   Height="20"
                   Width="120"/>

        <Label Grid.Column="0"
               Grid.Row="2"
               Width="auto"
               Height="auto"
               Margin="10,0,10,0"
               Background="{Binding Path=Theme.CanvasBackgroundColor}"
               BorderBrush="{Binding Path=Theme.CanvasBorderBrush}"
               BorderThickness="5"
               VerticalContentAlignment="Center"
               HorizontalContentAlignment="Center">
            <ScrollViewer x:Name="scrollViewerInitial"
                          HorizontalScrollBarVisibility="Auto" 
                          VerticalScrollBarVisibility="Auto" 
                          ScrollChanged="ScrollChanged">
                <Canvas x:Name="canvasOriginalImage"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Width="{Binding Path=OriginalCanvasWidth}"
                        Height="{Binding Path=OriginalCanvasHeight}"
                        MouseLeftButtonDown="CanvasMouseLeftButtonDown">
                    <Image x:Name="initialImage"
                           RenderOptions.BitmapScalingMode="NearestNeighbor"
                           Mouse.MouseMove="ImageMouseMove"
                           MouseLeftButtonDown="ImageMouseLeftButtonDown"
                           MouseRightButtonDown="ImageMouseRightButtonDown"
                           Source="{Binding Path=InitialImage}">
                        <Image.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding ElementName=sliderZoom, Path=Value}" 
                                            ScaleY="{Binding ElementName=sliderZoom, Path=Value}"/>
                        </Image.LayoutTransform>
                    </Image>
                </Canvas>
            </ScrollViewer>
        </Label>

        <Label Grid.Column="1"
               Grid.Row="2"
               Width="auto"
               Height="auto"
               Margin="10,0,10,0"
               Background="{Binding Path=Theme.CanvasBackgroundColor}"
               BorderBrush="{Binding Path=Theme.CanvasBorderBrush}"
               BorderThickness="5"
               VerticalContentAlignment="Center"
               HorizontalContentAlignment="Center">
            <ScrollViewer x:Name="scrollViewerProcessed"
                          HorizontalScrollBarVisibility="Auto" 
                          VerticalScrollBarVisibility="Auto" 
                          ScrollChanged="ScrollChanged">
                <Canvas x:Name="canvasProcessedImage"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Width="{Binding Path=ProcessedCanvasWidth}"
                        Height="{Binding Path=ProcessedCanvasHeight}"
                        MouseLeftButtonDown="CanvasMouseLeftButtonDown">
                    <Image x:Name="processedImage"
                           RenderOptions.BitmapScalingMode="NearestNeighbor"
                           Mouse.MouseMove="ImageMouseMove"
                           MouseLeftButtonDown="ImageMouseLeftButtonDown"
                           MouseRightButtonDown="ImageMouseRightButtonDown"
                           Source="{Binding Path=ProcessedImage}">
                        <Image.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding ElementName=sliderZoom, Path=Value}" 
                                            ScaleY="{Binding ElementName=sliderZoom, Path=Value}"/>
                        </Image.LayoutTransform>
                    </Image>
                </Canvas>
            </ScrollViewer>
        </Label>

        <Grid Grid.Row="3"
                    Grid.ColumnSpan="2"
                    Height="40"
                    Margin="10,0,10,0">
            <Button Content="Reset"
                    Command="{Binding Path=ResetZoomCommand}"
                    Foreground="{Binding Path=Theme.ButtonForegroundColor}"
                    Background="{Binding Path=Theme.ButtonBackgroundColor}"
                    BorderBrush="{Binding Path=Theme.ButtonBorderBrush}"
                    BorderThickness="2"
                    HorizontalAlignment="Left"
                    Height="35"
                    Width="80"/>
            <Slider x:Name="sliderZoom"
                    Orientation="Horizontal"
                    Foreground="{Binding Path=Theme.TextForeground}"
                    Value="{Binding Path=ScaleValue}"
                    Minimum="0.1"
                    Maximum="10.00"
                    SmallChange="0.05"
                    LargeChange="0.1"
                    TickFrequency="0.1"
                    TickPlacement="BottomRight"
                    Cursor="Hand"
                    ValueChanged="SliderZoom_ValueChanged"
                    Margin="100,0,100,0"
                    Height="30"
                    Width="auto"/>
            <TextBlock Text="{Binding Path=Value, ElementName=sliderZoom, StringFormat=N2}" 
                       Foreground="{Binding Path=Theme.TextForeground}"
                       FontSize="15"
                       TextAlignment="Center"
                       HorizontalAlignment="Right"
                       Height="30"
                       Width="50"
                       Margin="0,0,40,5"/>
            <TextBlock Text="x"
                       Foreground="{Binding Path=Theme.TextForeground}"
                       FontSize="15"
                       TextAlignment="Center"
                       HorizontalAlignment="Right"
                       Height="30"
                       Width="30"
                       Margin="0,0,20,5"/>
        </Grid>

        <Grid Grid.Column="0"
              Grid.Row="4"
              Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="1" 
                       Grid.Row="1"
                       Foreground="{Binding Path=Theme.TextForeground}"
                       Text="{Binding Path=XPos}"
                       FontSize="15" 
                       HorizontalAlignment="Center"/>
            <TextBlock Grid.Column="2" 
                       Grid.Row="1"
                       Foreground="{Binding Path=Theme.TextForeground}"
                       Text="{Binding Path=YPos}"
                       FontSize="15" 
                       HorizontalAlignment="Center"/>

            <TextBlock Grid.Column="5"
                       Grid.Row="1"
                       Foreground="{Binding Path=Theme.TextForeground}"
                       Text="{Binding Path=GrayValue}"
                       FontSize="15"
                       HorizontalAlignment="Center"/>

            <TextBlock Grid.Column="4"
                       Grid.Row="1"
                       Foreground="{Binding Path=Theme.TextForeground}"
                       Text="{Binding Path=RedValue}"
                       FontSize="15"
                       HorizontalAlignment="Center"/>
            <TextBlock Grid.Column="5"
                       Grid.Row="1"
                       Foreground="{Binding Path=Theme.TextForeground}"
                       Text="{Binding Path=GreenValue}"
                       FontSize="15"
                       HorizontalAlignment="Center"/>
            <TextBlock Grid.Column="6"
                       Grid.Row="1"
                       Foreground="{Binding Path=Theme.TextForeground}"
                       Text="{Binding Path=BlueValue}"
                       FontSize="15"
                       HorizontalAlignment="Center"/>
        </Grid>
    </Grid>
</Window>